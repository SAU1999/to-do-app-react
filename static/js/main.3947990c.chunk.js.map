{"version":3,"sources":["components/Todoitem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","components/SearchTodoItem.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","textDecoration","props","todo","isDone","background","inherits","createClass","key","value","_this$props$todo","id","taskName","react_default","a","createElement","style","className","type","checked","onChange","markComplete","bind","onClick","delTodo","aria-hidden","Component","PropType","object","isRequired","Todos","todos","map","components_Todoitem","array","headerStyle","color","backGround","textAlign","padding","Header","Link","to","AddTodo","state","title","e","setState","target","onSubmit","preventDefault","name","placeholder","required","cla","About","SearchTodoItem","console","log","filterTodos","App","suggestions","query","toLowerCase","filter","startsWith","axios","put","then","delete","res","toConsumableArray","post","newTodo","data","task_id","_this2","get","_this3","BrowserRouter","layout_Header","Route","path","exact","render","Fragment","components_AddTodo","components_SearchTodoItem","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3947990c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropType from \"prop-types\"\n\nexport class Todoitem extends Component {\n    \n    getStyle = () => {\n        return {\n            textDecoration : this.props.todo.isDone ? \"line-through\" : \"none\",\n            background : \"#f4f4f4\",\n            \n        }\n    }\n    \n    \n  render() {\n    const {id,taskName} = this.props.todo;\n    return (\n        \n        \n            <li style= {this.getStyle()} className = \"list-group-item\">  \n                <input type=\"checkbox\" checked={this.props.todo.isDone} onChange={this.props.markComplete.bind(this,this.props.todo.id)}/>\n                {\" \"}\n                {taskName} \n                <button className=\"btn btn-danger float-right\" onClick= {this.props.delTodo.bind(this,id)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                </button>\n            </li>\n                \n        \n    )\n  }\n}\n\nTodoitem.PropType = {\n    todo : PropType.object.isRequired\n}\n\n\n\nexport default Todoitem\n\n","import React, { Component } from 'react';\nimport Todoitem from \"./Todoitem\"\nimport PropType from \"prop-types\"\n\nclass Todos extends Component {\n  render() {\n    return (\n      \n      this.props.todos.map((todo) => \n        \n          <Todoitem key= {todo.id} todo={todo} markComplete = {this.props.markComplete} delTodo={this.props.delTodo}/>\n        \n      )\n    );\n  }\n}\n\nTodos.PropType = {\n  todos : PropType.array.isRequired\n}\n\nexport default Todos;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nfunction Header(){\n    return (\n        <header style={headerStyle}>\n            <h1>To Do List</h1>\n            <Link to=\"/\">Home</Link>|\n            <Link to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    color : \"black\",\n    backGround : \"white\",\n    textAlign : \"center\",\n    padding : \"10px\"\n\n}\n\n\nexport default Header","import React, { Component } from 'react'\n\nexport class AddTodo extends Component {\n\n    state = {\n        title  : \"\"\n    }\n\n    onChange = (e) => {\n        this.setState({\n            title : e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.setState({title : \"\"})\n        this.props.AddTodo(this.state.title);\n    }\n\n  render() {\n    return (\n      <form onSubmit= {this.onSubmit} className=\"form-inline mb-4\">\n          <input \n            type = \"text\"\n            name = \"title\"\n            placeholder = \"Add Todo ..\"\n            value = {this.state.title}\n            onChange = {this.onChange}\n            required\n            className=\"form-control\"\n          />\n          <input \n            cla\n            type=\"submit\"\n            value= \"Submit\"\n            className=\"btn btn-primary ml-2 form-control\"\n          />\n      </form>\n    )\n  }\n}\n\nexport default AddTodo\n","import React from 'react'\n\nfunction About() {\n  return (\n    <div>\n        <h1>About the Todo</h1>\n        <p> kuch kam ka nhi hai</p>\n    </div>\n  )\n}\n\n\nexport default About;\n","import React, {Component} from \"react\"\n\nclass SearchTodoItem extends Component{\n    constructor(){\n        super();\n        this.state = {\n            title : \"\",\n            \n        }\n    }\n\n    onChange = (e) => {\n        \n        this.setState({\n            title : e.target.value,\n            \n        })\n        console.log(e.target.value);\n\n        this.props.filterTodos(e.target.value);\n    }\n\n    render(){\n        console.log(this.props);\n        return(\n            <div>\n                <form className=\" form-inline mb-4\">\n                    <input \n                        type = \"text\" \n                        className=\"form-control\"\n                        \n                        onChange = {this.onChange}\n                        placeholder = \"Start Typing to filter...\"\n                        \n                        \n                    >\n                    \n                    </input>\n                    \n                    <button className=\"form-control btn btn-success ml-2\">\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n\n                    \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchTodoItem;\n","import React, { Component } from 'react';\nimport Todos from \"./components/Todos\"\nimport Header from \"./components/layout/Header\"\nimport AddTodo from \"./components/AddTodo\"\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport About from \"./components/pages/About\"\nimport axios from \"axios\"\nimport SearchTodoItem from \"./components/SearchTodoItem\"\n\n\n\nclass App extends Component {\n\n  state = {\n    todos : [],\n    suggestions : []\n  }\n\n\n  filterTodos = (query) => {\n    console.log(`update${query}`);\n    query = query.toLowerCase();\n    this.setState({\n      suggestions : query === \"\" ? this.state.todos :this.state.todos.filter((todo) => todo.taskName.toLowerCase().startsWith(query)),\n      todos : this.state.todos\n    })\n  }\n\n  componentDidMount(){\n    axios.get(\"http://localhost:3001/api\")\n    .then(res => {\n      this.setState({todos : res.data})\n      this.filterTodos(\"\");\n    })\n  }\n\n  markComplete = (id) =>{\n    axios.put(`http://localhost:3001/api/update/task/${id}`)\n    .then(\n      this.setState({\n        todos : this.state.todos.map((todo) => {\n          if(todo.id === id)\n            todo.isDone = !todo.isDone;\n          return todo;\n        })\n      })\n    )\n    \n  }\n\n  delTodo = (id) =>{\n    axios.delete(`http://localhost:3001/api/delete/task/${id}`)\n    .then(res => {\n      console.log(id);\n      this.setState({\n      todos : [...this.state.todos.filter((todo) => todo.id !== id)]\n      \n      })\n      this.filterTodos(\"\");\n    })\n    \n  }\n\n  AddTodo = (title) => {\n\n    axios.post(\"http://localhost:3001/api/add/task\",{\n      taskName : title\n    })\n    .then(res => {\n      console.log(res);\n      const newTodo = {\n        id : res.data.task_id,\n        taskName : title,\n        isDone : false\n      }\n\n      this.setState({\n        \n        todos : [...this.state.todos,newTodo]\n      })\n\n      this.filterTodos(\"\");\n    })\n    \n    \n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n          <Header/>\n\n          <Route path=\"/\" exact render= { props => (\n            \n            <React.Fragment>\n              <AddTodo AddTodo={this.AddTodo}/>\n    \n              <SearchTodoItem todos = {this.state.todos} filterTodos={this.filterTodos}/>\n              <ul className=\"list-group\">\n              <Todos todos = {this.state.suggestions} markComplete={this.markComplete} delTodo={this.delTodo}/>\n              </ul>\n              \n            </React.Fragment> \n          )\n          }/>\n\n\n          <Route path = \"/about\" component={About}/>\n          </div>\n        </div>\n      </Router>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}